declare class IsThis {
    isString(value: any): value is string;
    isNumber(value: any): value is number;
    isBoolean(value: any): value is boolean;
    isNull(value: any): value is null;
    isUndefined(value: any): value is undefined;
    isNullOrUndefined(value: any): boolean;
    isBigInt(value: any): value is bigint;
    isSymbol(value: any): value is symbol;
    isArray(value: any): value is any[];
    isObject(value: any): value is object;
    isArrayOrObject(value: any): value is object | any[];
    isFunction(value: any): value is Function;
    isHTMLElement(value: any): boolean;
    isMap(value: any): boolean;
    isSet(value: any): boolean;
    isWeakMap(value: any): value is WeakMap<any, any>;
    isWeakSet(value: any): value is WeakSet<any>;
    isPromise(value: any): boolean;
    isArrayBuffer(value: any): value is ArrayBuffer;
    isTypedArray(value: any): boolean;
    isBlob(value: any): value is Blob;
    isFile(value: any): value is File;
    isDataView(value: any): value is DataView;
    isInt(value: any): boolean;
    isFloat(value: any): boolean;
    isFiniteNumber(value: any): boolean;
    isInfinity(value: any): boolean;
    isEven(value: any): boolean;
    isOdd(value: any): boolean;
    isPositive(value: any): boolean;
    isNegative(value: any): boolean;
    isPrime(value: any): boolean;
    isSafeInteger(value: any): boolean;
    isDivisibleBy(value: any, divisor: number): boolean;
    isPerfectSquare(value: any): boolean;
    isFibonacci(value: any): boolean;
    isEmptyString(value: any): boolean;
    isNumberString(value: any): boolean;
    isBooleanString(value: any): boolean;
    isNullString(value: any): boolean;
    isUndefinedString(value: any): boolean;
    isNullOrUndefinedString(value: any): boolean;
    isDateString(value: any): boolean;
    isUUID(value: any): boolean;
    isHexColor(value: any): boolean;
    isPhoneNumber(value: any): boolean;
    isValidEmail(value: any): boolean;
    isAlpha(value: any): boolean;
    isAlphanumeric(value: any): boolean;
    isLowerCase(value: any): boolean;
    isUpperCase(value: any): boolean;
    isJSONString(value: any): boolean;
    isIPv4(value: any): boolean;
    isIPv6(value: any): boolean;
    isMACAddress(value: any): boolean;
    isBase64(value: any): boolean;
    isCreditCard(value: any): boolean;
    isPalindrome(value: any): boolean;
    isEmptyObject(value: any): boolean;
    isObjectWithKeys(value: any, keys: string[]): boolean;
    isPlainObject(value: any): boolean;
    isInstanceOf(value: any, classRef: Function): boolean;
    hasProperty(value: any, prop: string | symbol): boolean;
    hasMethod(value: any, methodName: string): boolean;
    hasKeys(value: any, keys: string[]): boolean;
    isPrototypeOf(value: any, prototype: any): boolean;
    isFrozen(value: any): boolean;
    isSealed(value: any): boolean;
    isExtensible(value: any): boolean;
    isEmptyArray(value: any): boolean;
    isNonEmptyArray(value: any): boolean;
    isArrayLike(value: any): boolean;
    isArrayOfType(value: any, typeCheck: (item: any) => boolean): boolean;
    isArrayOfStrings(value: any): boolean;
    isArrayOfNumbers(value: any): boolean;
    isArrayOfBooleans(value: any): boolean;
    isArrayOfObjects(value: any): boolean;
    isArrayOfPrimitives(value: any): boolean;
    isSubset(subset: any[], superset: any[]): boolean;
    isArrayOfUniqueElements(value: any): boolean;
    isDeepEqual(a: any, b: any): boolean;
    isShallowEqual(a: any, b: any): boolean;
    isGreaterThan(a: any, b: any): boolean;
    isLessThan(a: any, b: any): boolean;
    isBetween(value: number, min: number, max: number): boolean;
    isInstanceOfAll(value: any, constructors: Function[]): boolean;
    isInstanceOfAny(value: any, constructors: Function[]): boolean;
    isSimilarObject(obj1: any, obj2: any): boolean;
    isApproxEqual(value: number, comparison: number, tolerance?: number): boolean;
    isNonStrictEqual(a: any, b: any): boolean;
    isRegExp(value: any): boolean;
    isURL(value: any): boolean;
    isDomain(value: any): boolean;
    isRelativeURL(value: any): boolean;
    isAbsoluteURL(value: any): boolean;
    isSecureURL(value: any): boolean;
    isTruthy(value: any): boolean;
    isFalsy(value: any): boolean;
    isInRange(value: any, min: number, max: number): boolean;
    isFileSizeInRange(value: File, minBytes: number, maxBytes: number): boolean;
    isBrowser(): boolean;
    isNode(): boolean;
    isUserDefinedType(value: any, constructor: Function): boolean;
    isWeakRef(value: any): boolean;
    isNativeFunction(value: any): boolean;
    isMimeType(value: any): boolean;
    isMobileDevice(): boolean;
    isDevEnvironment(): boolean;
    isProdEnvironment(): boolean;
    isIterable(value: any): boolean;
    isEmptyIterable(value: any): boolean;
    isNonEmptyIterable(value: any): boolean;
    isNonEmptyMap(value: any): boolean;
    isNonEmptySet(value: any): boolean;
    isAsyncFunction(value: any): boolean;
    isPromiseLike(value: any): boolean;
    isFunctionType(value: any, constructor: Function): boolean;
    isGeneratorFunction(value: any): boolean;
    isArrowFunction(value: any): boolean;
    isAsyncGeneratorFunction(value: any): boolean;
    isDate(value: any): value is Date;
    isPastDate(value: any): boolean;
    isFutureDate(value: any): boolean;
    isValidDate(value: any): boolean;
    isLeapYear(year: number): boolean;
    isWeekend(value: any): boolean;
    isToday(value: any): boolean;
    isTomorrow(value: any): boolean;
    isError(value: any): boolean;
    isTypeError(value: any): boolean;
    isSyntaxError(value: any): boolean;
    isRangeError(value: any): boolean;
}
declare const isThis: IsThis;
export default isThis;
